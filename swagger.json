{
    "swagger": "2.0",
    "info": {
        "title": "Open Event API",
        "description": "API to create an event management app",
        "version": "0.0.1"
    },
    "host": "openevent.championswimmer.in",
    "schemes": [
        "http",
        "https"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List of events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Event"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}": {
            "get": {
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "description": "Event id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "details of event",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/sessions": {
            "get": {
                "summary": "List of Sessions",
                "description": "Gets list of sessions\n",
                "tags": [
                    "Sessions"
                ],
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "description": "Event id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of sessions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Session"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/events/{eventId}/speakers": {
            "get": {
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "description": "Event id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of speakers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Speaker"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of an event"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the event"
                },
                "tagline": {
                    "type": "string",
                    "description": "Tagline of the event"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "street": {
                    "type": "string"
                },
                "locality": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "abstract": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "speakers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Speaker": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "person": {
                    "$ref": "#/definitions/Person"
                },
                "bio": {
                    "type": "string"
                }
            }
        },
        "Person": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "alt": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}